#!/usr/bin/env bash

show_help() {
    echo "Execute a shell agnostic init script

USAGE:
    any-shell-init [--interactive] [--login] SHELL SCRIPT

ARGUMENTS:
    SHELL:  Print executable code in this shell's syntax. This code is meant to
            be evaluated by that shell upon startup.

    SCRIPT: A bash initialization script to execute. This script will have
            access to helper functions provided by any-shell-init.

    --interactive: Set if this command is being called from an interactive shell.
                   Sets is_interactive to true before calling SCRIPT

    --login: Set if this command is being called from a login shell. Sets
             is_login to true before calling SCRIPT"

    exit -1
}

is_login=false
is_interactive=false

while [[ $# > 1 ]]
do
    key="$1"
    case $key in
        -h|-?|--help)
            show_help
        ;;
        --login)
            is_login=true
        ;;
        --interactive)
            is_interactive=true
        ;;
        *)
            break
        ;;
    esac
    shift
done

# Two arguments should remain after parsing the above options
if [ "$#" -ne 2 ]; then
    show_help
fi

target_shell=$1
script=$2

function setEnv() {
    name=$1
    value=$2
    case $target_shell in
        fish)
            echo "setenv -x $name \"$value\";"
        ;;
        bash|sh|zsh)
            echo "export $name=\"$value\";"
        ;;
        csh|tcsh)
            echo "setenv $name \"$value\";"
        ;;
        *)
            echo "ERROR: Unknown target shell" >&2
            exit -1
        ;;
    esac

    # Also set the variable locally, in case it's used in the init script
    export $name="$value"
}

function appendEnv() {
    name=$1
    value=$2
    case $target_shell in
        fish)
            echo "setenv -x $name \"\$$name\" \"$value\";"
        ;;
        bash|sh|zsh)
            echo "export $name=\"\$$name\":\"$value\";"
        ;;
        csh|tcsh)
            echo "setenv $name \"\$$name\":\"$value\";"
        ;;
        *)
            echo "ERROR: Unknown target shell"  >&2
            exit -1
        ;;
    esac

    # Also set the variable locally, in case it's used in the init script
    export $name="${!name}":"$value"
}

function prependEnv() {
    name=$1
    value=$2
    case $target_shell in
        fish)
            echo "setenv -x $name \"$value\" \"\$$name\";"
        ;;
        bash|sh|zsh)
            echo "export $name=\"$value\":\"\$$name\";"
        ;;
        csh|tcsh)
            echo "setenv $name \"$value\":\"\$$name\";"
        ;;
        *)
            echo "ERROR: Unknown target shell"  >&2
            exit -1
        ;;
    esac

    # Also set the variable locally, in case it's used in the init script
    export $name="$value":"${!name}"
}

source $script
